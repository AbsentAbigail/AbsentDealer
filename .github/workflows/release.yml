name: Create Release on Push to Master

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create ZIP archive with top-level folder
        run: |
          mkdir absentdealer
          shopt -s dotglob
          mv * absentdealer/
          zip -r absentdealer.zip absentdealer -x 'absentdealer.zip'


      - name: Generate tag name
        run: echo "RELEASE_TAG=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # ✅ Create and push Git tag
      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $RELEASE_TAG
          git push origin $RELEASE_TAG
        env:
          RELEASE_TAG: ${{ env.RELEASE_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Fetch all tags to ensure remote tags are available
      - name: Fetch all tags
        run: git fetch --tags

      # ✅ Wait for tag to propagate (just in case)
      - name: Wait for tag to propagate
        run: sleep 5

      # ✅ Verify the tag exists
      - name: Verify tag exists
        run: git tag -l

      # ✅ Create GitHub Release using actions/create-release
      - name: Create GitHub Release using actions/create-release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          body: "Release for ${{ env.RELEASE_TAG }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Get the upload URL from the create-release step output
      - name: Get upload URL
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      # ✅ Upload ZIP to release using actions/upload-release-asset
      - name: Upload ZIP to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./absentdealer.zip
          asset_name: absentdealer.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
